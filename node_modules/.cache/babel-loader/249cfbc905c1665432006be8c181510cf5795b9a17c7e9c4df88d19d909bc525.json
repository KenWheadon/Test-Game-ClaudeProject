{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kenne\\\\OneDrive\\\\Desktop\\\\claude-test-game1\\\\monstrous-ascendancy\\\\src\\\\GameContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useCallback } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GameContext = /*#__PURE__*/createContext();\nexport const useGameContext = () => {\n  _s();\n  return useContext(GameContext);\n};\n_s(useGameContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const GameProvider = ({\n  children\n}) => {\n  _s2();\n  const [gameState, setGameState] = useState('start');\n  const [wave, setWave] = useState(1);\n  const [monsterHP, setMonsterHP] = useState(1);\n  const [monsterMaxHP, setMonsterMaxHP] = useState(1);\n  const [monsterDamage, setMonsterDamage] = useState(1);\n  const [heroHP, setHeroHP] = useState(1);\n  const [heroMaxHP, setHeroMaxHP] = useState(1);\n  const [heroDamage, setHeroDamage] = useState(1);\n  const [exp, setExp] = useState(0);\n  const [isTargetVisible, setIsTargetVisible] = useState(false);\n  const [monsterCooldown, setMonsterCooldown] = useState(5000);\n  const [heroCooldown, setHeroCooldown] = useState(3000);\n  const [damageLevel, setDamageLevel] = useState(1);\n  const [healthLevel, setHealthLevel] = useState(1);\n  const startGame = useCallback(() => {\n    setGameState('playing');\n    setWave(1);\n    setMonsterHP(1);\n    setMonsterMaxHP(1);\n    setMonsterDamage(1);\n    setHeroHP(1);\n    setHeroMaxHP(1);\n    setHeroDamage(1);\n    setExp(0);\n    setDamageLevel(1);\n    setHealthLevel(1);\n  }, []);\n  const handleTargetClick = useCallback(() => {\n    setMonsterCooldown(prev => Math.max(0, prev - 250));\n    setIsTargetVisible(false);\n    setTimeout(() => setIsTargetVisible(true), 1000);\n  }, []);\n  const handleUpgrade = useCallback(type => {\n    const cost = type === 'damage' ? damageLevel : healthLevel;\n    if (exp >= cost) {\n      if (type === 'damage') {\n        setDamageLevel(prev => prev + 1);\n        setMonsterDamage(prev => prev + 1);\n      } else if (type === 'health') {\n        setHealthLevel(prev => prev + 1);\n        setMonsterMaxHP(prev => prev + 1);\n        setMonsterHP(prev => prev + 1);\n      }\n      setExp(prev => prev - cost);\n    }\n  }, [exp, damageLevel, healthLevel]);\n  const value = {\n    gameState,\n    setGameState,\n    wave,\n    setWave,\n    monsterHP,\n    setMonsterHP,\n    monsterMaxHP,\n    setMonsterMaxHP,\n    monsterDamage,\n    setMonsterDamage,\n    heroHP,\n    setHeroHP,\n    heroMaxHP,\n    setHeroMaxHP,\n    heroDamage,\n    setHeroDamage,\n    exp,\n    setExp,\n    isTargetVisible,\n    setIsTargetVisible,\n    monsterCooldown,\n    setMonsterCooldown,\n    heroCooldown,\n    setHeroCooldown,\n    damageLevel,\n    setDamageLevel,\n    healthLevel,\n    setHealthLevel,\n    startGame,\n    handleTargetClick,\n    handleUpgrade\n  };\n  return /*#__PURE__*/_jsxDEV(GameContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 10\n  }, this);\n};\n_s2(GameProvider, \"IA3Ard2+maNutmVyoEi9DD57AT4=\");\n_c = GameProvider;\nvar _c;\n$RefreshReg$(_c, \"GameProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useCallback","jsxDEV","_jsxDEV","GameContext","useGameContext","_s","GameProvider","children","_s2","gameState","setGameState","wave","setWave","monsterHP","setMonsterHP","monsterMaxHP","setMonsterMaxHP","monsterDamage","setMonsterDamage","heroHP","setHeroHP","heroMaxHP","setHeroMaxHP","heroDamage","setHeroDamage","exp","setExp","isTargetVisible","setIsTargetVisible","monsterCooldown","setMonsterCooldown","heroCooldown","setHeroCooldown","damageLevel","setDamageLevel","healthLevel","setHealthLevel","startGame","handleTargetClick","prev","Math","max","setTimeout","handleUpgrade","type","cost","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/kenne/OneDrive/Desktop/claude-test-game1/monstrous-ascendancy/src/GameContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useCallback } from 'react';\r\n\r\nconst GameContext = createContext();\r\n\r\nexport const useGameContext = () => useContext(GameContext);\r\n\r\nexport const GameProvider = ({ children }) => {\r\n  const [gameState, setGameState] = useState('start');\r\n  const [wave, setWave] = useState(1);\r\n  const [monsterHP, setMonsterHP] = useState(1);\r\n  const [monsterMaxHP, setMonsterMaxHP] = useState(1);\r\n  const [monsterDamage, setMonsterDamage] = useState(1);\r\n  const [heroHP, setHeroHP] = useState(1);\r\n  const [heroMaxHP, setHeroMaxHP] = useState(1);\r\n  const [heroDamage, setHeroDamage] = useState(1);\r\n  const [exp, setExp] = useState(0);\r\n  const [isTargetVisible, setIsTargetVisible] = useState(false);\r\n  const [monsterCooldown, setMonsterCooldown] = useState(5000);\r\n  const [heroCooldown, setHeroCooldown] = useState(3000);\r\n  const [damageLevel, setDamageLevel] = useState(1);\r\n  const [healthLevel, setHealthLevel] = useState(1);\r\n\r\n  const startGame = useCallback(() => {\r\n    setGameState('playing');\r\n    setWave(1);\r\n    setMonsterHP(1);\r\n    setMonsterMaxHP(1);\r\n    setMonsterDamage(1);\r\n    setHeroHP(1);\r\n    setHeroMaxHP(1);\r\n    setHeroDamage(1);\r\n    setExp(0);\r\n    setDamageLevel(1);\r\n    setHealthLevel(1);\r\n  }, []);\r\n\r\n  const handleTargetClick = useCallback(() => {\r\n    setMonsterCooldown(prev => Math.max(0, prev - 250));\r\n    setIsTargetVisible(false);\r\n    setTimeout(() => setIsTargetVisible(true), 1000);\r\n  }, []);\r\n\r\n  const handleUpgrade = useCallback((type) => {\r\n    const cost = type === 'damage' ? damageLevel : healthLevel;\r\n    if (exp >= cost) {\r\n      if (type === 'damage') {\r\n        setDamageLevel(prev => prev + 1);\r\n        setMonsterDamage(prev => prev + 1);\r\n      } else if (type === 'health') {\r\n        setHealthLevel(prev => prev + 1);\r\n        setMonsterMaxHP(prev => prev + 1);\r\n        setMonsterHP(prev => prev + 1);\r\n      }\r\n      setExp(prev => prev - cost);\r\n    }\r\n  }, [exp, damageLevel, healthLevel]);\r\n\r\n  const value = {\r\n    gameState, setGameState,\r\n    wave, setWave,\r\n    monsterHP, setMonsterHP,\r\n    monsterMaxHP, setMonsterMaxHP,\r\n    monsterDamage, setMonsterDamage,\r\n    heroHP, setHeroHP,\r\n    heroMaxHP, setHeroMaxHP,\r\n    heroDamage, setHeroDamage,\r\n    exp, setExp,\r\n    isTargetVisible, setIsTargetVisible,\r\n    monsterCooldown, setMonsterCooldown,\r\n    heroCooldown, setHeroCooldown,\r\n    damageLevel, setDamageLevel,\r\n    healthLevel, setHealthLevel,\r\n    startGame,\r\n    handleTargetClick,\r\n    handleUpgrade\r\n  };\r\n\r\n  return <GameContext.Provider value={value}>{children}</GameContext.Provider>;\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}