{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kenne\\\\OneDrive\\\\Desktop\\\\claude-test-game1\\\\monstrous-ascendancy\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport Monster from './Monster';\nimport Hero from './Hero';\nimport HealthBar from './HealthBar';\nimport TargetButton from './TargetButton';\nimport GameOverScreen from './GameOverScreen';\nimport StartScreen from './StartScreen';\nimport Timer from './Timer';\nimport './App.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Game = () => {\n  _s();\n  const [gameState, setGameState] = useState('start');\n  const [wave, setWave] = useState(1);\n  const [monsterHP, setMonsterHP] = useState(1);\n  const [monsterMaxHP, setMonsterMaxHP] = useState(1);\n  const [monsterDamage, setMonsterDamage] = useState(1);\n  const [heroHP, setHeroHP] = useState(1);\n  const [heroMaxHP, setHeroMaxHP] = useState(1);\n  const [heroDamage, setHeroDamage] = useState(1);\n  const [exp, setExp] = useState(0);\n  const [isTargetVisible, setIsTargetVisible] = useState(false);\n  const [monsterCooldown, setMonsterCooldown] = useState(5000);\n  const [heroCooldown, setHeroCooldown] = useState(3000);\n  const [damageLevel, setDamageLevel] = useState(1);\n  const [healthLevel, setHealthLevel] = useState(1);\n  const damageScale = [1, 2, 3, 5, 7, 9, 12, 15, 18, 21, 25, 29, 33, 37, 41, 46, 51, 56, 61, 66, 71, 77, 83, 89, 95, 101, 107, 113, 120, 127, 134, 141, 148, 155, 162, 169, 177, 185, 193, 201, 209, 217, 225, 233, 241, 250, 259, 268, 277, 286, 295, 304, 313, 322, 331, 341, 351, 361, 371, 381, 391, 401, 411, 421, 431, 441, 452, 463, 474, 485, 496, 507, 518, 529, 540, 551, 562, 573, 585, 597, 609, 621, 633, 645, 657, 669, 681, 693, 705, 717, 729, 742, 755, 768, 781, 794, 807, 820, 833, 846];\n  const healthScale = [1, 2, 4, 6, 8, 12, 16, 20, 26, 32, 40, 48, 58, 68, 80, 92, 106, 120, 136, 152, 170, 188, 208, 228, 250, 272, 296, 320, 346, 372, 400, 428, 458, 488, 520, 552, 586, 620, 656, 692, 730, 768, 808, 848, 890, 932, 976, 1020, 1066, 1112, 1160, 1208, 1258, 1308, 1360, 1412, 1466, 1520, 1576, 1632, 1690, 1748, 1808, 1868, 1930, 1992, 2056, 2120, 2186, 2252, 2320, 2388, 2458, 2528, 2600, 2672, 2746, 2820, 2896, 2972, 3050, 3128, 3208, 3288, 3370, 3452, 3536, 3620, 3706, 3792, 3880, 3968, 4058, 4148, 4240, 4332, 4426, 4520, 4616, 4712];\n  const showTarget = useCallback(() => {\n    setIsTargetVisible(true);\n  }, []);\n  useEffect(() => {\n    if (gameState === 'playing') {\n      const monsterAttackInterval = setInterval(() => {\n        setHeroHP(prevHP => Math.max(0, prevHP - monsterDamage));\n        setMonsterCooldown(5000);\n      }, monsterCooldown);\n      const heroAttackInterval = setInterval(() => {\n        setMonsterHP(prevHP => Math.max(0, prevHP - heroDamage));\n        setHeroCooldown(3000);\n      }, heroCooldown);\n      const cooldownTickInterval = setInterval(() => {\n        setMonsterCooldown(prev => Math.max(0, prev - 100));\n        setHeroCooldown(prev => Math.max(0, prev - 100));\n      }, 100);\n\n      // Show target after 1 second\n      const targetTimeout = setTimeout(showTarget, 1000);\n      return () => {\n        clearInterval(monsterAttackInterval);\n        clearInterval(heroAttackInterval);\n        clearInterval(cooldownTickInterval);\n        clearTimeout(targetTimeout);\n      };\n    }\n  }, [gameState, monsterDamage, heroDamage, monsterCooldown, heroCooldown, showTarget]);\n  useEffect(() => {\n    if (heroHP <= 0 && gameState === 'playing') {\n      setExp(prevExp => prevExp + wave);\n      setWave(prevWave => prevWave + 1);\n      startNewWave();\n    } else if (monsterHP <= 0 && gameState === 'playing') {\n      setGameState('gameOver');\n    }\n  }, [heroHP, monsterHP, wave, gameState]);\n  const handleUpgrade = type => {\n    const cost = type === 'damage' ? damageLevel : healthLevel;\n    if (exp >= cost) {\n      if (type === 'damage') {\n        setDamageLevel(prev => prev + 1);\n        setMonsterDamage(damageScale[Math.min(damageLevel, damageScale.length - 1)]);\n      } else if (type === 'health') {\n        setHealthLevel(prev => prev + 1);\n        const newHealth = healthScale[Math.min(healthLevel, healthScale.length - 1)];\n        setMonsterMaxHP(newHealth);\n        setMonsterHP(newHealth);\n      }\n      setExp(prev => prev - cost);\n    }\n  };\n  const startNewWave = () => {\n    setHeroHP(wave);\n    setHeroMaxHP(wave);\n    setHeroDamage(wave);\n    setMonsterHP(monsterMaxHP);\n    setIsTargetVisible(false);\n  };\n  const handleTargetClick = () => {\n    setMonsterCooldown(prev => Math.max(0, prev - 250));\n    setIsTargetVisible(false);\n    setTimeout(showTarget, 1000);\n  };\n  const startGame = () => {\n    setGameState('playing');\n    startNewWave();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-container\",\n    children: [gameState === 'start' && /*#__PURE__*/_jsxDEV(StartScreen, {\n      onStart: startGame\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }, this), gameState === 'playing' && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info-bar\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Wave: \", wave]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"EXP: \", exp]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"battle-area\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"monster-container\",\n          children: [/*#__PURE__*/_jsxDEV(Monster, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(HealthBar, {\n            current: monsterHP,\n            max: monsterMaxHP\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Timer, {\n            cooldown: monsterCooldown,\n            maxCooldown: 5000\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Damage: \", monsterDamage, \" (Level \", damageLevel, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Health: \", monsterMaxHP, \" (Level \", healthLevel, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"hero-container\",\n          children: [/*#__PURE__*/_jsxDEV(Hero, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(HealthBar, {\n            current: heroHP,\n            max: heroMaxHP\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Timer, {\n            cooldown: heroCooldown,\n            maxCooldown: 3000\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TargetButton, {\n            onClick: handleTargetClick,\n            isVisible: isTargetVisible\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), gameState === 'gameOver' && /*#__PURE__*/_jsxDEV(GameOverScreen, {\n      wave: wave,\n      exp: exp,\n      onUpgrade: handleUpgrade,\n      damageCost: damageLevel,\n      healthCost: healthLevel,\n      onRestart: () => {\n        setGameState('start');\n        setWave(1);\n        setMonsterHP(1);\n        setMonsterMaxHP(1);\n        setMonsterDamage(1);\n        setHeroHP(1);\n        setHeroMaxHP(1);\n        setHeroDamage(1);\n        setExp(0);\n        setDamageLevel(1);\n        setHealthLevel(1);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n};\n_s(Game, \"EncazmntaUe/B6LqFzZEYV/SYQk=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","Monster","Hero","HealthBar","TargetButton","GameOverScreen","StartScreen","Timer","jsxDEV","_jsxDEV","Fragment","_Fragment","Game","_s","gameState","setGameState","wave","setWave","monsterHP","setMonsterHP","monsterMaxHP","setMonsterMaxHP","monsterDamage","setMonsterDamage","heroHP","setHeroHP","heroMaxHP","setHeroMaxHP","heroDamage","setHeroDamage","exp","setExp","isTargetVisible","setIsTargetVisible","monsterCooldown","setMonsterCooldown","heroCooldown","setHeroCooldown","damageLevel","setDamageLevel","healthLevel","setHealthLevel","damageScale","healthScale","showTarget","monsterAttackInterval","setInterval","prevHP","Math","max","heroAttackInterval","cooldownTickInterval","prev","targetTimeout","setTimeout","clearInterval","clearTimeout","prevExp","prevWave","startNewWave","handleUpgrade","type","cost","min","length","newHealth","handleTargetClick","startGame","className","children","onStart","fileName","_jsxFileName","lineNumber","columnNumber","current","cooldown","maxCooldown","onClick","isVisible","onUpgrade","damageCost","healthCost","onRestart","_c","$RefreshReg$"],"sources":["C:/Users/kenne/OneDrive/Desktop/claude-test-game1/monstrous-ascendancy/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport Monster from './Monster';\nimport Hero from './Hero';\nimport HealthBar from './HealthBar';\nimport TargetButton from './TargetButton';\nimport GameOverScreen from './GameOverScreen';\nimport StartScreen from './StartScreen';\nimport Timer from './Timer';\nimport './App.css';\n\nconst Game = () => {\n  const [gameState, setGameState] = useState('start');\n  const [wave, setWave] = useState(1);\n  const [monsterHP, setMonsterHP] = useState(1);\n  const [monsterMaxHP, setMonsterMaxHP] = useState(1);\n  const [monsterDamage, setMonsterDamage] = useState(1);\n  const [heroHP, setHeroHP] = useState(1);\n  const [heroMaxHP, setHeroMaxHP] = useState(1);\n  const [heroDamage, setHeroDamage] = useState(1);\n  const [exp, setExp] = useState(0);\n  const [isTargetVisible, setIsTargetVisible] = useState(false);\n  const [monsterCooldown, setMonsterCooldown] = useState(5000);\n  const [heroCooldown, setHeroCooldown] = useState(3000);\n  const [damageLevel, setDamageLevel] = useState(1);\n  const [healthLevel, setHealthLevel] = useState(1);\n\n  const damageScale = [1, 2, 3, 5, 7, 9, 12, 15, 18, 21, 25, 29, 33, 37, 41, 46, 51, 56, 61, 66, 71, 77, 83, 89, 95, 101, 107, 113, 120, 127, 134, 141, 148, 155, 162, 169, 177, 185, 193, 201, 209, 217, 225, 233, 241, 250, 259, 268, 277, 286, 295, 304, 313, 322, 331, 341, 351, 361, 371, 381, 391, 401, 411, 421, 431, 441, 452, 463, 474, 485, 496, 507, 518, 529, 540, 551, 562, 573, 585, 597, 609, 621, 633, 645, 657, 669, 681, 693, 705, 717, 729, 742, 755, 768, 781, 794, 807, 820, 833, 846];\n\n  const healthScale = [1, 2, 4, 6, 8, 12, 16, 20, 26, 32, 40, 48, 58, 68, 80, 92, 106, 120, 136, 152, 170, 188, 208, 228, 250, 272, 296, 320, 346, 372, 400, 428, 458, 488, 520, 552, 586, 620, 656, 692, 730, 768, 808, 848, 890, 932, 976, 1020, 1066, 1112, 1160, 1208, 1258, 1308, 1360, 1412, 1466, 1520, 1576, 1632, 1690, 1748, 1808, 1868, 1930, 1992, 2056, 2120, 2186, 2252, 2320, 2388, 2458, 2528, 2600, 2672, 2746, 2820, 2896, 2972, 3050, 3128, 3208, 3288, 3370, 3452, 3536, 3620, 3706, 3792, 3880, 3968, 4058, 4148, 4240, 4332, 4426, 4520, 4616, 4712];\n\n  const showTarget = useCallback(() => {\n    setIsTargetVisible(true);\n  }, []);\n\n  useEffect(() => {\n    if (gameState === 'playing') {\n      const monsterAttackInterval = setInterval(() => {\n        setHeroHP((prevHP) => Math.max(0, prevHP - monsterDamage));\n        setMonsterCooldown(5000);\n      }, monsterCooldown);\n\n      const heroAttackInterval = setInterval(() => {\n        setMonsterHP((prevHP) => Math.max(0, prevHP - heroDamage));\n        setHeroCooldown(3000);\n      }, heroCooldown);\n\n      const cooldownTickInterval = setInterval(() => {\n        setMonsterCooldown((prev) => Math.max(0, prev - 100));\n        setHeroCooldown((prev) => Math.max(0, prev - 100));\n      }, 100);\n\n      // Show target after 1 second\n      const targetTimeout = setTimeout(showTarget, 1000);\n\n      return () => {\n        clearInterval(monsterAttackInterval);\n        clearInterval(heroAttackInterval);\n        clearInterval(cooldownTickInterval);\n        clearTimeout(targetTimeout);\n      };\n    }\n  }, [gameState, monsterDamage, heroDamage, monsterCooldown, heroCooldown, showTarget]);\n\n  useEffect(() => {\n    if (heroHP <= 0 && gameState === 'playing') {\n      setExp((prevExp) => prevExp + wave);\n      setWave((prevWave) => prevWave + 1);\n      startNewWave();\n    } else if (monsterHP <= 0 && gameState === 'playing') {\n      setGameState('gameOver');\n    }\n  }, [heroHP, monsterHP, wave, gameState]);\n\n  const handleUpgrade = (type) => {\n    const cost = type === 'damage' ? damageLevel : healthLevel;\n    if (exp >= cost) {\n      if (type === 'damage') {\n        setDamageLevel((prev) => prev + 1);\n        setMonsterDamage(damageScale[Math.min(damageLevel, damageScale.length - 1)]);\n      } else if (type === 'health') {\n        setHealthLevel((prev) => prev + 1);\n        const newHealth = healthScale[Math.min(healthLevel, healthScale.length - 1)];\n        setMonsterMaxHP(newHealth);\n        setMonsterHP(newHealth);\n      }\n      setExp((prev) => prev - cost);\n    }\n  };\n\n  const startNewWave = () => {\n    setHeroHP(wave);\n    setHeroMaxHP(wave);\n    setHeroDamage(wave);\n    setMonsterHP(monsterMaxHP);\n    setIsTargetVisible(false);\n  };\n\n  const handleTargetClick = () => {\n    setMonsterCooldown(prev => Math.max(0, prev - 250));\n    setIsTargetVisible(false);\n    setTimeout(showTarget, 1000);\n  };\n\n  const startGame = () => {\n    setGameState('playing');\n    startNewWave();\n  };\n\n  return (\n    <div className=\"game-container\">\n      {gameState === 'start' && (\n        <StartScreen onStart={startGame} />\n      )}\n      {gameState === 'playing' && (\n        <>\n          <div className=\"info-bar\">\n            <span>Wave: {wave}</span>\n            <span>EXP: {exp}</span>\n          </div>\n          <div className=\"battle-area\">\n            <div className=\"monster-container\">\n              <Monster />\n              <HealthBar current={monsterHP} max={monsterMaxHP} />\n              <Timer cooldown={monsterCooldown} maxCooldown={5000} />\n              <div>Damage: {monsterDamage} (Level {damageLevel})</div>\n              <div>Health: {monsterMaxHP} (Level {healthLevel})</div>\n            </div>\n            <div className=\"hero-container\">\n              <Hero />\n              <HealthBar current={heroHP} max={heroMaxHP} />\n              <Timer cooldown={heroCooldown} maxCooldown={3000} />\n              <TargetButton \n                onClick={handleTargetClick} \n                isVisible={isTargetVisible} \n              />\n            </div>\n          </div>\n        </>\n      )}\n      {gameState === 'gameOver' && (\n        <GameOverScreen \n          wave={wave} \n          exp={exp} \n          onUpgrade={handleUpgrade}\n          damageCost={damageLevel}\n          healthCost={healthLevel}\n          onRestart={() => {\n            setGameState('start');\n            setWave(1);\n            setMonsterHP(1);\n            setMonsterMaxHP(1);\n            setMonsterDamage(1);\n            setHeroHP(1);\n            setHeroMaxHP(1);\n            setHeroDamage(1);\n            setExp(0);\n            setDamageLevel(1);\n            setHealthLevel(1);\n          }} \n        />\n      )}\n    </div>\n  );\n};\n\nexport default Game;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AAC/D,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEnB,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGjB,QAAQ,CAAC,OAAO,CAAC;EACnD,MAAM,CAACkB,IAAI,EAAEC,OAAO,CAAC,GAAGnB,QAAQ,CAAC,CAAC,CAAC;EACnC,MAAM,CAACoB,SAAS,EAAEC,YAAY,CAAC,GAAGrB,QAAQ,CAAC,CAAC,CAAC;EAC7C,MAAM,CAACsB,YAAY,EAAEC,eAAe,CAAC,GAAGvB,QAAQ,CAAC,CAAC,CAAC;EACnD,MAAM,CAACwB,aAAa,EAAEC,gBAAgB,CAAC,GAAGzB,QAAQ,CAAC,CAAC,CAAC;EACrD,MAAM,CAAC0B,MAAM,EAAEC,SAAS,CAAC,GAAG3B,QAAQ,CAAC,CAAC,CAAC;EACvC,MAAM,CAAC4B,SAAS,EAAEC,YAAY,CAAC,GAAG7B,QAAQ,CAAC,CAAC,CAAC;EAC7C,MAAM,CAAC8B,UAAU,EAAEC,aAAa,CAAC,GAAG/B,QAAQ,CAAC,CAAC,CAAC;EAC/C,MAAM,CAACgC,GAAG,EAAEC,MAAM,CAAC,GAAGjC,QAAQ,CAAC,CAAC,CAAC;EACjC,MAAM,CAACkC,eAAe,EAAEC,kBAAkB,CAAC,GAAGnC,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAACoC,eAAe,EAAEC,kBAAkB,CAAC,GAAGrC,QAAQ,CAAC,IAAI,CAAC;EAC5D,MAAM,CAACsC,YAAY,EAAEC,eAAe,CAAC,GAAGvC,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACwC,WAAW,EAAEC,cAAc,CAAC,GAAGzC,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAAC0C,WAAW,EAAEC,cAAc,CAAC,GAAG3C,QAAQ,CAAC,CAAC,CAAC;EAEjD,MAAM4C,WAAW,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAEze,MAAMC,WAAW,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;EAExiB,MAAMC,UAAU,GAAG5C,WAAW,CAAC,MAAM;IACnCiC,kBAAkB,CAAC,IAAI,CAAC;EAC1B,CAAC,EAAE,EAAE,CAAC;EAENlC,SAAS,CAAC,MAAM;IACd,IAAIe,SAAS,KAAK,SAAS,EAAE;MAC3B,MAAM+B,qBAAqB,GAAGC,WAAW,CAAC,MAAM;QAC9CrB,SAAS,CAAEsB,MAAM,IAAKC,IAAI,CAACC,GAAG,CAAC,CAAC,EAAEF,MAAM,GAAGzB,aAAa,CAAC,CAAC;QAC1Da,kBAAkB,CAAC,IAAI,CAAC;MAC1B,CAAC,EAAED,eAAe,CAAC;MAEnB,MAAMgB,kBAAkB,GAAGJ,WAAW,CAAC,MAAM;QAC3C3B,YAAY,CAAE4B,MAAM,IAAKC,IAAI,CAACC,GAAG,CAAC,CAAC,EAAEF,MAAM,GAAGnB,UAAU,CAAC,CAAC;QAC1DS,eAAe,CAAC,IAAI,CAAC;MACvB,CAAC,EAAED,YAAY,CAAC;MAEhB,MAAMe,oBAAoB,GAAGL,WAAW,CAAC,MAAM;QAC7CX,kBAAkB,CAAEiB,IAAI,IAAKJ,IAAI,CAACC,GAAG,CAAC,CAAC,EAAEG,IAAI,GAAG,GAAG,CAAC,CAAC;QACrDf,eAAe,CAAEe,IAAI,IAAKJ,IAAI,CAACC,GAAG,CAAC,CAAC,EAAEG,IAAI,GAAG,GAAG,CAAC,CAAC;MACpD,CAAC,EAAE,GAAG,CAAC;;MAEP;MACA,MAAMC,aAAa,GAAGC,UAAU,CAACV,UAAU,EAAE,IAAI,CAAC;MAElD,OAAO,MAAM;QACXW,aAAa,CAACV,qBAAqB,CAAC;QACpCU,aAAa,CAACL,kBAAkB,CAAC;QACjCK,aAAa,CAACJ,oBAAoB,CAAC;QACnCK,YAAY,CAACH,aAAa,CAAC;MAC7B,CAAC;IACH;EACF,CAAC,EAAE,CAACvC,SAAS,EAAEQ,aAAa,EAAEM,UAAU,EAAEM,eAAe,EAAEE,YAAY,EAAEQ,UAAU,CAAC,CAAC;EAErF7C,SAAS,CAAC,MAAM;IACd,IAAIyB,MAAM,IAAI,CAAC,IAAIV,SAAS,KAAK,SAAS,EAAE;MAC1CiB,MAAM,CAAE0B,OAAO,IAAKA,OAAO,GAAGzC,IAAI,CAAC;MACnCC,OAAO,CAAEyC,QAAQ,IAAKA,QAAQ,GAAG,CAAC,CAAC;MACnCC,YAAY,CAAC,CAAC;IAChB,CAAC,MAAM,IAAIzC,SAAS,IAAI,CAAC,IAAIJ,SAAS,KAAK,SAAS,EAAE;MACpDC,YAAY,CAAC,UAAU,CAAC;IAC1B;EACF,CAAC,EAAE,CAACS,MAAM,EAAEN,SAAS,EAAEF,IAAI,EAAEF,SAAS,CAAC,CAAC;EAExC,MAAM8C,aAAa,GAAIC,IAAI,IAAK;IAC9B,MAAMC,IAAI,GAAGD,IAAI,KAAK,QAAQ,GAAGvB,WAAW,GAAGE,WAAW;IAC1D,IAAIV,GAAG,IAAIgC,IAAI,EAAE;MACf,IAAID,IAAI,KAAK,QAAQ,EAAE;QACrBtB,cAAc,CAAEa,IAAI,IAAKA,IAAI,GAAG,CAAC,CAAC;QAClC7B,gBAAgB,CAACmB,WAAW,CAACM,IAAI,CAACe,GAAG,CAACzB,WAAW,EAAEI,WAAW,CAACsB,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;MAC9E,CAAC,MAAM,IAAIH,IAAI,KAAK,QAAQ,EAAE;QAC5BpB,cAAc,CAAEW,IAAI,IAAKA,IAAI,GAAG,CAAC,CAAC;QAClC,MAAMa,SAAS,GAAGtB,WAAW,CAACK,IAAI,CAACe,GAAG,CAACvB,WAAW,EAAEG,WAAW,CAACqB,MAAM,GAAG,CAAC,CAAC,CAAC;QAC5E3C,eAAe,CAAC4C,SAAS,CAAC;QAC1B9C,YAAY,CAAC8C,SAAS,CAAC;MACzB;MACAlC,MAAM,CAAEqB,IAAI,IAAKA,IAAI,GAAGU,IAAI,CAAC;IAC/B;EACF,CAAC;EAED,MAAMH,YAAY,GAAGA,CAAA,KAAM;IACzBlC,SAAS,CAACT,IAAI,CAAC;IACfW,YAAY,CAACX,IAAI,CAAC;IAClBa,aAAa,CAACb,IAAI,CAAC;IACnBG,YAAY,CAACC,YAAY,CAAC;IAC1Ba,kBAAkB,CAAC,KAAK,CAAC;EAC3B,CAAC;EAED,MAAMiC,iBAAiB,GAAGA,CAAA,KAAM;IAC9B/B,kBAAkB,CAACiB,IAAI,IAAIJ,IAAI,CAACC,GAAG,CAAC,CAAC,EAAEG,IAAI,GAAG,GAAG,CAAC,CAAC;IACnDnB,kBAAkB,CAAC,KAAK,CAAC;IACzBqB,UAAU,CAACV,UAAU,EAAE,IAAI,CAAC;EAC9B,CAAC;EAED,MAAMuB,SAAS,GAAGA,CAAA,KAAM;IACtBpD,YAAY,CAAC,SAAS,CAAC;IACvB4C,YAAY,CAAC,CAAC;EAChB,CAAC;EAED,oBACElD,OAAA;IAAK2D,SAAS,EAAC,gBAAgB;IAAAC,QAAA,GAC5BvD,SAAS,KAAK,OAAO,iBACpBL,OAAA,CAACH,WAAW;MAACgE,OAAO,EAAEH;IAAU;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CACnC,EACA5D,SAAS,KAAK,SAAS,iBACtBL,OAAA,CAAAE,SAAA;MAAA0D,QAAA,gBACE5D,OAAA;QAAK2D,SAAS,EAAC,UAAU;QAAAC,QAAA,gBACvB5D,OAAA;UAAA4D,QAAA,GAAM,QAAM,EAACrD,IAAI;QAAA;UAAAuD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACzBjE,OAAA;UAAA4D,QAAA,GAAM,OAAK,EAACvC,GAAG;QAAA;UAAAyC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpB,CAAC,eACNjE,OAAA;QAAK2D,SAAS,EAAC,aAAa;QAAAC,QAAA,gBAC1B5D,OAAA;UAAK2D,SAAS,EAAC,mBAAmB;UAAAC,QAAA,gBAChC5D,OAAA,CAACR,OAAO;YAAAsE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACXjE,OAAA,CAACN,SAAS;YAACwE,OAAO,EAAEzD,SAAU;YAAC+B,GAAG,EAAE7B;UAAa;YAAAmD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACpDjE,OAAA,CAACF,KAAK;YAACqE,QAAQ,EAAE1C,eAAgB;YAAC2C,WAAW,EAAE;UAAK;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACvDjE,OAAA;YAAA4D,QAAA,GAAK,UAAQ,EAAC/C,aAAa,EAAC,UAAQ,EAACgB,WAAW,EAAC,GAAC;UAAA;YAAAiC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACxDjE,OAAA;YAAA4D,QAAA,GAAK,UAAQ,EAACjD,YAAY,EAAC,UAAQ,EAACoB,WAAW,EAAC,GAAC;UAAA;YAAA+B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpD,CAAC,eACNjE,OAAA;UAAK2D,SAAS,EAAC,gBAAgB;UAAAC,QAAA,gBAC7B5D,OAAA,CAACP,IAAI;YAAAqE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACRjE,OAAA,CAACN,SAAS;YAACwE,OAAO,EAAEnD,MAAO;YAACyB,GAAG,EAAEvB;UAAU;YAAA6C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAC9CjE,OAAA,CAACF,KAAK;YAACqE,QAAQ,EAAExC,YAAa;YAACyC,WAAW,EAAE;UAAK;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACpDjE,OAAA,CAACL,YAAY;YACX0E,OAAO,EAAEZ,iBAAkB;YAC3Ba,SAAS,EAAE/C;UAAgB;YAAAuC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC5B,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA,eACN,CACH,EACA5D,SAAS,KAAK,UAAU,iBACvBL,OAAA,CAACJ,cAAc;MACbW,IAAI,EAAEA,IAAK;MACXc,GAAG,EAAEA,GAAI;MACTkD,SAAS,EAAEpB,aAAc;MACzBqB,UAAU,EAAE3C,WAAY;MACxB4C,UAAU,EAAE1C,WAAY;MACxB2C,SAAS,EAAEA,CAAA,KAAM;QACfpE,YAAY,CAAC,OAAO,CAAC;QACrBE,OAAO,CAAC,CAAC,CAAC;QACVE,YAAY,CAAC,CAAC,CAAC;QACfE,eAAe,CAAC,CAAC,CAAC;QAClBE,gBAAgB,CAAC,CAAC,CAAC;QACnBE,SAAS,CAAC,CAAC,CAAC;QACZE,YAAY,CAAC,CAAC,CAAC;QACfE,aAAa,CAAC,CAAC,CAAC;QAChBE,MAAM,CAAC,CAAC,CAAC;QACTQ,cAAc,CAAC,CAAC,CAAC;QACjBE,cAAc,CAAC,CAAC,CAAC;MACnB;IAAE;MAAA8B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAC7D,EAAA,CAzJID,IAAI;AAAAwE,EAAA,GAAJxE,IAAI;AA2JV,eAAeA,IAAI;AAAC,IAAAwE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}